// xmlbaseparse.h
// Generated by pargen at 2017-07-26T23:59:40-0700
// clang-format off
#pragma once

#include "xmlbaseparsebase.h"

namespace Dim::Detail {


/****************************************************************************
*
*   XmlBaseParser
*
***/

class XmlBaseParser : public XmlBaseParserBase {
public:
    using XmlBaseParserBase::XmlBaseParserBase;

    bool parse (const char src[]);
    size_t errpos () const { return m_errpos; }

private:
    bool stateCp (const char *& src);
    bool stateElementTail (const char *& src);

    // Events
    bool onAttrCopyChar (char ch);
    bool onAttrInPlaceEnd (const char * eptr);
    bool onAttrNameStart (const char * ptr);
    bool onAttrNameEnd (const char * eptr);
    bool onAttrValueStart (const char * ptr);
    bool onAttrValueEnd (const char * eptr);
    bool onCDataWithEndStart (const char * ptr);
    bool onCDataWithEndEnd (const char * eptr);
    bool onCharDataChar (char ch);
    bool onCharRefStart (const char * ptr);
    bool onCharRefEnd (const char * eptr);
    bool onCharRefDigitChar (char ch);
    bool onCharRefHexdigChar (char ch);
    bool onElemNameStart (const char * ptr);
    bool onElemNameEnd (const char * eptr);
    bool onElemTextStart (const char * ptr);
    bool onElemTextEnd (const char * eptr);
    bool onElementEnd (const char * eptr);
    bool onEntityAmpEnd (const char * eptr);
    bool onEntityAposEnd (const char * eptr);
    bool onEntityGtEnd (const char * eptr);
    bool onEntityLtEnd (const char * eptr);
    bool onEntityOtherEnd (const char * eptr);
    bool onEntityQuotEnd (const char * eptr);
    bool onEntityValueStart (const char * ptr);
    bool onEntityValueEnd (const char * eptr);
    bool onNormalizableWsChar (char ch);

    // Data members
    size_t m_errpos{0};
};

} // namespace
