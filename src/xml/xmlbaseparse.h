// xmlbaseparse.h
// Generated by pargen at 2016-10-18T19:09:54-0700
// clang-format off
#pragma once

namespace Dim::Detail {

// forward declarations
class IXmlBaseParserNotify;


/****************************************************************************
*
*   XmlBaseParser
*
***/

class XmlBaseParser {
public:
    XmlBaseParser (IXmlBaseParserNotify * notify) : m_notify(notify) {}
    ~XmlBaseParser () {}

    bool parse (const char src[]);
    size_t errWhere () const { return m_errWhere; }

    IXmlBaseParserNotify * notify() const { return m_notify; }

    // sets notify and returns its previous value
    IXmlBaseParserNotify * notify(IXmlBaseParserNotify * notify);

private:
    bool stateCp (const char *& src);
    bool stateElement (const char *& src);

    IXmlBaseParserNotify * m_notify{nullptr};
    size_t m_errWhere{0};
};


/****************************************************************************
*
*   Parser event notifications
*   Clients inherit from this class to process parse events
*
***/

class IXmlBaseParserNotify {
public:
    virtual ~IXmlBaseParserNotify () {}

    virtual bool onStart () { return true; }
    virtual bool onEnd () { return true; }

};

} // namespace
