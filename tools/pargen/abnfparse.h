// abnfparse.h
// Generated by pargen at 2017-07-13T23:46:07-0700
// clang-format off
#pragma once

#include "abnfparsebase.h"


/****************************************************************************
*
*   AbnfParser
*
***/

class AbnfParser : public AbnfParserBase {
public:
    using AbnfParserBase::AbnfParserBase;

    bool parse (const char src[]);
    size_t errpos () const { return m_errpos; }

private:
    bool stateGroupTail (const char *& src);

    // Events
    bool onStart ();
    bool onEnd ();

    bool onActionAsEnd (const char * eptr);
    bool onActionCharEnd (const char * eptr);
    bool onActionEndEnd (const char * eptr);
    bool onActionFuncEnd (const char * eptr);
    bool onActionMinEnd (const char * eptr);
    bool onActionNoMinEnd (const char * eptr);
    bool onActionStartEnd (const char * eptr);
    bool onAlternationStart (const char * ptr);
    bool onAlternationEnd (const char * eptr);
    bool onBinValAltFirstEnd (const char * eptr);
    bool onBinValAltSecondEnd (const char * eptr);
    bool onBinValConcatEachEnd (const char * eptr);
    bool onBinValConcatenationStart (const char * ptr);
    bool onBinValConcatenationEnd (const char * eptr);
    bool onBinValSequenceChar (char ch);
    bool onBinValSimpleEnd (const char * eptr);
    bool onCharValInsensitiveEnd (const char * eptr);
    bool onCharValSensitiveEnd (const char * eptr);
    bool onCharValSequenceStart (const char * ptr);
    bool onCharValSequenceChar (char ch);
    bool onConcatenationStart (const char * ptr);
    bool onConcatenationEnd (const char * eptr);
    bool onDecValAltFirstEnd (const char * eptr);
    bool onDecValAltSecondEnd (const char * eptr);
    bool onDecValConcatEachEnd (const char * eptr);
    bool onDecValConcatenationStart (const char * ptr);
    bool onDecValConcatenationEnd (const char * eptr);
    bool onDecValSequenceChar (char ch);
    bool onDecValSimpleEnd (const char * eptr);
    bool onDefinedAsIncrementalEnd (const char * eptr);
    bool onDefinedAsSetEnd (const char * eptr);
    bool onGroupStart (const char * ptr);
    bool onGroupEnd (const char * eptr);
    bool onHexValAltFirstEnd (const char * eptr);
    bool onHexValAltSecondEnd (const char * eptr);
    bool onHexValConcatEachEnd (const char * eptr);
    bool onHexValConcatenationStart (const char * ptr);
    bool onHexValConcatenationEnd (const char * eptr);
    bool onHexValSequenceChar (char ch);
    bool onHexValSimpleEnd (const char * eptr);
    bool onOptionQuotedChar (char ch);
    bool onOptionUnquotedChar (char ch);
    bool onOptiondefEnd (const char * eptr);
    bool onOptionlistStart (const char * ptr);
    bool onOptionlistEnd (const char * eptr);
    bool onOptionnameChar (char ch);
    bool onRepeatMaxEnd (const char * eptr);
    bool onRepeatMinmaxEnd (const char * eptr);
    bool onRepeatRangeStart (const char * ptr);
    bool onRepetitionStart (const char * ptr);
    bool onRuleEnd (const char * eptr);
    bool onRulenameStart (const char * ptr);
    bool onRulenameChar (char ch);
    bool onRulerefEnd (const char * eptr);

    // Data members
    size_t m_errpos{0};
};
